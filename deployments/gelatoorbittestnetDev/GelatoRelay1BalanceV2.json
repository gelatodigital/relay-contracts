{
  "address": "0x0AA68cA8D43432aAcf26Db0a6512d5DC305eDA56",
  "abi": [
    {
      "anonymous": false,
      "inputs": [],
      "name": "LogUseGelato1BalanceV2",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_correlationId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_vs",
          "type": "bytes32"
        }
      ],
      "name": "sponsoredCallV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x19224f9a0af50ddf41acc279bf7a34cab31a93767da3a54e9084a925c5085369",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x7aD7b5F4F0E5Df7D6Aa5444516429AF77babc3A0",
    "contractAddress": null,
    "transactionIndex": 1,
    "gasUsed": "324311",
    "logsBloom": "0x
    "blockHash": "0xbe6acb3f3641cb3e4eab3d4e73190dadca6aa72e8a811befdd37882b39ba9449",
    "transactionHash": "0x19224f9a0af50ddf41acc279bf7a34cab31a93767da3a54e9084a925c5085369",
    "logs": [],
    "blockNumber": 2115892,
    "cumulativeGasUsed": "324311",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "082abcd288abb0735d39caa113bdc656",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"LogUseGelato1BalanceV2\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_correlationId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_vs\",\"type\":\"bytes32\"}],\"name\":\"sponsoredCallV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract must NEVER hold funds!Maliciously crafted transaction payloads could wipe out any funds left here\",\"kind\":\"dev\",\"methods\":{\"sponsoredCallV2(address,bytes,bytes32,bytes32,bytes32)\":{\"details\":\"This method can be called directly without passing through the diamondThe validity of the emitted LogUseGelato1BalanceV2 event must be verified off-chainPayment is handled with off-chain accounting using Gelato's 1Balance system\",\"params\":{\"_correlationId\":\"Unique task identifier generated by gelato Signature is split into `r` and `vs` - See https://eips.ethereum.org/EIPS/eip-2098\",\"_data\":\"Relay call data\",\"_r\":\"Checker signature\",\"_target\":\"Relay call target\",\"_vs\":\"Checker signature\"}}},\"title\":\"Gelato Relay V2 contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"sponsoredCallV2(address,bytes,bytes32,bytes32,bytes32)\":{\"notice\":\"Relay call + One Balance payment - with sponsor authentication\"}},\"notice\":\"This contract deals with Gelato 1Balance payments\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GelatoRelay1BalanceV2.sol\":\"GelatoRelay1BalanceV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"contracts/GelatoRelay1BalanceV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport {IGelatoRelay1BalanceV2} from \\\"./interfaces/IGelatoRelay1BalanceV2.sol\\\";\\nimport {IGelato1BalanceV2} from \\\"./interfaces/IGelato1BalanceV2.sol\\\";\\nimport {GelatoBytes} from \\\"./lib/GelatoBytes.sol\\\";\\n\\n/// @title  Gelato Relay V2 contract\\n/// @notice This contract deals with Gelato 1Balance payments\\n/// @dev    This contract must NEVER hold funds!\\n/// @dev    Maliciously crafted transaction payloads could wipe out any funds left here\\n// solhint-disable-next-line max-states-count\\ncontract GelatoRelay1BalanceV2 is IGelatoRelay1BalanceV2, IGelato1BalanceV2 {\\n    using GelatoBytes for bytes;\\n\\n    /// @notice Relay call + One Balance payment - with sponsor authentication\\n    /// @dev    This method can be called directly without passing through the diamond\\n    /// @dev    The validity of the emitted LogUseGelato1BalanceV2 event must be verified off-chain\\n    /// @dev    Payment is handled with off-chain accounting using Gelato's 1Balance system\\n    /// @param _target Relay call target\\n    /// @param _data Relay call data\\n    /// @param _correlationId Unique task identifier generated by gelato\\n    /// Signature is split into `r` and `vs` - See https://eips.ethereum.org/EIPS/eip-2098\\n    /// @param _r Checker signature\\n    /// @param _vs Checker signature\\n    function sponsoredCallV2(\\n        address _target,\\n        bytes calldata _data,\\n        bytes32 _correlationId,\\n        bytes32 _r,\\n        bytes32 _vs\\n    ) external {\\n        // These parameters are decoded from calldata\\n        (_correlationId);\\n        (_r);\\n        (_vs);\\n\\n        // INTERACTIONS\\n        (bool success, bytes memory data) = _target.call(_data);\\n        if (!success) data.revertWithError(\\\"GelatoRelay.sponsoredCallV2:\\\");\\n\\n        emit LogUseGelato1BalanceV2();\\n    }\\n}\\n\",\"keccak256\":\"0x3fbeb1c6c8af081778dd98ebba906856411ac738d128849db1622a57d38cf85d\",\"license\":\"MIT\"},\"contracts/interfaces/IGelato1BalanceV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface IGelato1BalanceV2 {\\n    event LogUseGelato1BalanceV2();\\n}\\n\",\"keccak256\":\"0x7d5d62de9998c577a97b6c064891916ba6cbe9698c717dfc340f664062beeb42\",\"license\":\"MIT\"},\"contracts/interfaces/IGelatoRelay1BalanceV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface IGelatoRelay1BalanceV2 {\\n    function sponsoredCallV2(\\n        address _target,\\n        bytes calldata _data,\\n        bytes32 _correlationId,\\n        bytes32 _r,\\n        bytes32 _vs\\n    ) external;\\n}\\n\",\"keccak256\":\"0x983cd869cc01d78754054d93fafa34418142ab96e3697e1a9775fb1884911db5\",\"license\":\"MIT\"},\"contracts/lib/GelatoBytes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nlibrary GelatoBytes {\\n    function calldataSliceSelector(\\n        bytes calldata _bytes\\n    ) internal pure returns (bytes4 selector) {\\n        selector =\\n            _bytes[0] |\\n            (bytes4(_bytes[1]) >> 8) |\\n            (bytes4(_bytes[2]) >> 16) |\\n            (bytes4(_bytes[3]) >> 24);\\n    }\\n\\n    function memorySliceSelector(\\n        bytes memory _bytes\\n    ) internal pure returns (bytes4 selector) {\\n        selector =\\n            _bytes[0] |\\n            (bytes4(_bytes[1]) >> 8) |\\n            (bytes4(_bytes[2]) >> 16) |\\n            (bytes4(_bytes[3]) >> 24);\\n    }\\n\\n    function revertWithError(\\n        bytes memory _bytes,\\n        string memory _tracingInfo\\n    ) internal pure {\\n        // 68: 32-location, 32-length, 4-ErrorSelector, UTF-8 err\\n        if (_bytes.length % 32 == 4) {\\n            bytes4 selector;\\n            assembly {\\n                selector := mload(add(0x20, _bytes))\\n            }\\n            if (selector == 0x08c379a0) {\\n                // Function selector for Error(string)\\n                assembly {\\n                    _bytes := add(_bytes, 68)\\n                }\\n                revert(string(abi.encodePacked(_tracingInfo, string(_bytes))));\\n            } else {\\n                revert(\\n                    string(abi.encodePacked(_tracingInfo, \\\"NoErrorSelector\\\"))\\n                );\\n            }\\n        } else {\\n            revert(\\n                string(abi.encodePacked(_tracingInfo, \\\"UnexpectedReturndata\\\"))\\n            );\\n        }\\n    }\\n\\n    function returnError(\\n        bytes memory _bytes,\\n        string memory _tracingInfo\\n    ) internal pure returns (string memory) {\\n        // 68: 32-location, 32-length, 4-ErrorSelector, UTF-8 err\\n        if (_bytes.length % 32 == 4) {\\n            bytes4 selector;\\n            assembly {\\n                selector := mload(add(0x20, _bytes))\\n            }\\n            if (selector == 0x08c379a0) {\\n                // Function selector for Error(string)\\n                assembly {\\n                    _bytes := add(_bytes, 68)\\n                }\\n                return string(abi.encodePacked(_tracingInfo, string(_bytes)));\\n            } else {\\n                return\\n                    string(abi.encodePacked(_tracingInfo, \\\"NoErrorSelector\\\"));\\n            }\\n        } else {\\n            return\\n                string(abi.encodePacked(_tracingInfo, \\\"UnexpectedReturndata\\\"));\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9117d4f06af49c2c0902f80a62669d56ce37bc71773b46fba3c453805c16e744\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061048e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ad718d2a14610030575b600080fd5b61004361003e366004610232565b610045565b005b6000808773ffffffffffffffffffffffffffffffffffffffff16878760405161006f9291906102e7565b6000604051808303816000865af19150503d80600081146100ac576040519150601f19603f3d011682016040523d82523d6000602084013e6100b1565b606091505b5091509150816100fa5760408051808201909152601c81527f47656c61746f52656c61792e73706f6e736f72656443616c6c56323a0000000060208201526100fa90829061012d565b6040517f8e4f8b7f1299a63a6b46587ec357933d2006e5697cd46d99297e670cee1dbeb190600090a15050505050505050565b6020825161013b91906102f7565b6004036102215760208201517fffffffff0000000000000000000000000000000000000000000000000000000081167f08c379a000000000000000000000000000000000000000000000000000000000036102105760448301925081836040516020016101a9929190610356565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261020791600401610385565b60405180910390fd5b816040516020016101a991906103d6565b806040516020016101a99190610417565b60008060008060008060a0878903121561024b57600080fd5b863573ffffffffffffffffffffffffffffffffffffffff8116811461026f57600080fd5b9550602087013567ffffffffffffffff8082111561028c57600080fd5b818901915089601f8301126102a057600080fd5b8135818111156102af57600080fd5b8a60208285010111156102c157600080fd5b979a60209290920199509697604081013597506060810135965060800135945092505050565b8183823760009101908152919050565b60008261032d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b60005b8381101561034d578181015183820152602001610335565b50506000910152565b60008351610368818460208801610332565b83519083019061037c818360208801610332565b01949350505050565b60208152600082518060208401526103a4816040850160208701610332565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600082516103e8818460208701610332565b7f4e6f4572726f7253656c6563746f720000000000000000000000000000000000920191825250600f01919050565b60008251610429818460208701610332565b7f556e657870656374656452657475726e6461746100000000000000000000000092019182525060140191905056fea26469706673582212201c24bb35f643e934da08589c5f6555c05c04cbeeab83f3289618de255460a3b464736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ad718d2a14610030575b600080fd5b61004361003e366004610232565b610045565b005b6000808773ffffffffffffffffffffffffffffffffffffffff16878760405161006f9291906102e7565b6000604051808303816000865af19150503d80600081146100ac576040519150601f19603f3d011682016040523d82523d6000602084013e6100b1565b606091505b5091509150816100fa5760408051808201909152601c81527f47656c61746f52656c61792e73706f6e736f72656443616c6c56323a0000000060208201526100fa90829061012d565b6040517f8e4f8b7f1299a63a6b46587ec357933d2006e5697cd46d99297e670cee1dbeb190600090a15050505050505050565b6020825161013b91906102f7565b6004036102215760208201517fffffffff0000000000000000000000000000000000000000000000000000000081167f08c379a000000000000000000000000000000000000000000000000000000000036102105760448301925081836040516020016101a9929190610356565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261020791600401610385565b60405180910390fd5b816040516020016101a991906103d6565b806040516020016101a99190610417565b60008060008060008060a0878903121561024b57600080fd5b863573ffffffffffffffffffffffffffffffffffffffff8116811461026f57600080fd5b9550602087013567ffffffffffffffff8082111561028c57600080fd5b818901915089601f8301126102a057600080fd5b8135818111156102af57600080fd5b8a60208285010111156102c157600080fd5b979a60209290920199509697604081013597506060810135965060800135945092505050565b8183823760009101908152919050565b60008261032d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b60005b8381101561034d578181015183820152602001610335565b50506000910152565b60008351610368818460208801610332565b83519083019061037c818360208801610332565b01949350505050565b60208152600082518060208401526103a4816040850160208701610332565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600082516103e8818460208701610332565b7f4e6f4572726f7253656c6563746f720000000000000000000000000000000000920191825250600f01919050565b60008251610429818460208701610332565b7f556e657870656374656452657475726e6461746100000000000000000000000092019182525060140191905056fea26469706673582212201c24bb35f643e934da08589c5f6555c05c04cbeeab83f3289618de255460a3b464736f6c63430008140033",
  "devdoc": {
    "details": "This contract must NEVER hold funds!Maliciously crafted transaction payloads could wipe out any funds left here",
    "kind": "dev",
    "methods": {
      "sponsoredCallV2(address,bytes,bytes32,bytes32,bytes32)": {
        "details": "This method can be called directly without passing through the diamondThe validity of the emitted LogUseGelato1BalanceV2 event must be verified off-chainPayment is handled with off-chain accounting using Gelato's 1Balance system",
        "params": {
          "_correlationId": "Unique task identifier generated by gelato Signature is split into `r` and `vs` - See https://eips.ethereum.org/EIPS/eip-2098",
          "_data": "Relay call data",
          "_r": "Checker signature",
          "_target": "Relay call target",
          "_vs": "Checker signature"
        }
      }
    },
    "title": "Gelato Relay V2 contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "sponsoredCallV2(address,bytes,bytes32,bytes32,bytes32)": {
        "notice": "Relay call + One Balance payment - with sponsor authentication"
      }
    },
    "notice": "This contract deals with Gelato 1Balance payments",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}