{
  "address": "0x59D0e1Cd1b5521E8F21AcA6B8Fd95181297E2784",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeCollector",
          "type": "address"
        }
      ],
      "name": "LogFeeCollector",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "LogMsgData",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "emitFeeCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOnlyGelatoRelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdedad1d64722793c932f54367ca6493ff5dd887ec7ddbae3675198031a1ed529",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x59D0e1Cd1b5521E8F21AcA6B8Fd95181297E2784",
    "transactionIndex": 0,
    "gasUsed": "226796",
    "logsBloom": "0x
    "blockHash": "0x41af076ade7d79d0b31f2b63d08b24d00fbe5542f8eeff128d0b4040c93c1139",
    "transactionHash": "0xdedad1d64722793c932f54367ca6493ff5dd887ec7ddbae3675198031a1ed529",
    "logs": [],
    "blockNumber": 7722048,
    "cumulativeGasUsed": "226796",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "2db35055c2f8905eca3d48ec6a0b3a43",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"name\":\"LogFeeCollector\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogMsgData\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"emitFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOnlyGelatoRelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/__mocks__/MockGelatoRelayFeeCollector.sol\":\"MockGelatoRelayFeeCollector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"@gelatonetwork/relay-context/contracts/GelatoRelayFeeCollector.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.1;\\n\\nimport {GelatoRelayBase} from \\\"./base/GelatoRelayBase.sol\\\";\\n\\nuint256 constant _FEE_COLLECTOR_START = 32;\\n\\n// WARNING: Do not use this free fn by itself, always inherit GelatoRelayFeeCollector\\n// solhint-disable-next-line func-visibility, private-vars-leading-underscore\\nfunction __getFeeCollector() pure returns (address) {\\n    return\\n        abi.decode(\\n            msg.data[msg.data.length - _FEE_COLLECTOR_START:],\\n            (address)\\n        );\\n}\\n\\n/**\\n * @dev Context variant with only feeCollector appended to msg.data\\n * Expects calldata encoding:\\n *   abi.encodePacked(bytes data, address feeCollectorAddress)\\n * Therefore, we're expecting 32bytes to be appended to normal msgData\\n * 32bytes start offsets from calldatasize:\\n *    feeCollector: - 32\\n */\\n/// @dev Do not use with GelatoRelayFeeCollector - pick only one\\nabstract contract GelatoRelayFeeCollector is GelatoRelayBase {\\n    // Do not confuse with OZ Context.sol _msgData()\\n    function __msgData() internal view returns (bytes calldata) {\\n        return\\n            _isGelatoRelay(msg.sender)\\n                ? msg.data[:msg.data.length - _FEE_COLLECTOR_START]\\n                : msg.data;\\n    }\\n\\n    // Only use with GelatoRelayBase onlyGelatoRelay or `_isGelatoRelay` checks\\n    function _getFeeCollector() internal pure returns (address) {\\n        return __getFeeCollector();\\n    }\\n}\\n\",\"keccak256\":\"0x1c8f4fcd953d55f73131fa313800b505941b0e0e861ab667173c89860e1e24c8\",\"license\":\"MIT\"},\"@gelatonetwork/relay-context/contracts/base/GelatoRelayBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.1;\\n\\nimport {GELATO_RELAY} from \\\"../constants/GelatoRelay.sol\\\";\\n\\nabstract contract GelatoRelayBase {\\n    modifier onlyGelatoRelay() {\\n        require(\\n            _isGelatoRelay(msg.sender),\\n            \\\"GelatoRelayContext.onlyGelatoRelay\\\"\\n        );\\n        _;\\n    }\\n\\n    function _isGelatoRelay(address _forwarder) internal pure returns (bool) {\\n        return _forwarder == GELATO_RELAY;\\n    }\\n}\\n\",\"keccak256\":\"0x6d497388d378afb532735b7e75bdc99804e72ffedd1f1a3644c35e0e947fecda\",\"license\":\"MIT\"},\"@gelatonetwork/relay-context/contracts/constants/GelatoRelay.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.1;\\n\\naddress constant GELATO_RELAY = 0xaBcC9b596420A9E9172FD5938620E265a0f9Df92;\\n\",\"keccak256\":\"0xc5ddf2c3b6d7a1f75994f5bd42f7b8b6553d2584eec4a7bd5e00f1a58a1dfb87\",\"license\":\"MIT\"},\"contracts/__mocks__/MockGelatoRelayFeeCollector.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport {\\n    __getFeeCollector,\\n    GelatoRelayFeeCollector\\n} from \\\"@gelatonetwork/relay-context/contracts/GelatoRelayFeeCollector.sol\\\";\\n\\ncontract MockGelatoRelayFeeCollector is GelatoRelayFeeCollector {\\n    event LogMsgData(bytes data);\\n    event LogFeeCollector(address feeCollector);\\n\\n    function emitFeeCollector() external {\\n        emit LogMsgData(__msgData());\\n        emit LogFeeCollector(__getFeeCollector());\\n    }\\n\\n    // solhint-disable-next-line no-empty-blocks\\n    function testOnlyGelatoRelay() external onlyGelatoRelay {}\\n}\\n\",\"keccak256\":\"0x3f066fa029dd41256e4785b450c9c9ad52b86f7733c931384140383231045fd3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610328806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a0f9f5a81461003b578063ac08f35014610045575b600080fd5b61004361004d565b005b6100436100df565b7f84a7e86a5530dbab0d699a72cd56748c29585a63e9b2b8281b9acdf52e9d161e610076610188565b6040516100849291906101fe565b60405180910390a17f224677f1527d30571682747065020d5c16b714e22cd0b3220aa217a5a174730b6100b56101d2565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b73abcc9b596420a9e9172fd5938620e265a0f9df923314610186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f47656c61746f52656c6179436f6e746578742e6f6e6c7947656c61746f52656c60448201527f6179000000000000000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b565b36600073abcc9b596420a9e9172fd5938620e265a0f9df9233146101ae576000366101ca565b600080366101bd60208261024b565b926101ca9392919061028b565b915091509091565b600080366101e160208261024b565b6101ec92829061028b565b8101906101f991906102b5565b905090565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b81810381811115610285577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b6000808585111561029b57600080fd5b838611156102a857600080fd5b5050820193919092039150565b6000602082840312156102c757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102eb57600080fd5b939250505056fea264697066735822122085eda5aece5a4417695309754fceb1a6544daaed8364670609f3f3576ad9104564736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063a0f9f5a81461003b578063ac08f35014610045575b600080fd5b61004361004d565b005b6100436100df565b7f84a7e86a5530dbab0d699a72cd56748c29585a63e9b2b8281b9acdf52e9d161e610076610188565b6040516100849291906101fe565b60405180910390a17f224677f1527d30571682747065020d5c16b714e22cd0b3220aa217a5a174730b6100b56101d2565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b73abcc9b596420a9e9172fd5938620e265a0f9df923314610186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f47656c61746f52656c6179436f6e746578742e6f6e6c7947656c61746f52656c60448201527f6179000000000000000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b565b36600073abcc9b596420a9e9172fd5938620e265a0f9df9233146101ae576000366101ca565b600080366101bd60208261024b565b926101ca9392919061028b565b915091509091565b600080366101e160208261024b565b6101ec92829061028b565b8101906101f991906102b5565b905090565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b81810381811115610285577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b6000808585111561029b57600080fd5b838611156102a857600080fd5b5050820193919092039150565b6000602082840312156102c757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102eb57600080fd5b939250505056fea264697066735822122085eda5aece5a4417695309754fceb1a6544daaed8364670609f3f3576ad9104564736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}